{"version":3,"sources":["NavBar.js","Footer.js","Home.js","BlogList.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","Footer","Home","BlogList","db","getFirestore","useState","Posts","setPosts","useEffect","getDocs","collection","then","querySnapshot","temp","forEach","query","push","data","onClick","x","document","getElementById","style","display","docRef","doc","getDoc","docSnap","exists","console","log","id","type","userPostInput","value","addDoc","content","title","y","userReplyInput","userInput","map","post","JSON","stringify","NotFound","to","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","signOut","catch","error","getAnalytics","provider","GoogleAuthProvider","signInWithPopup","result","credentialFromResult","accessToken","user","code","message","email","credentialFromError","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bdf3b419.chunk.js","sourcesContent":["const Navbar = () => {\n    return (  \n        <nav className=\"navbar\">\n            <div className=\"links\">\n                <h1>YAM Blogs</h1>\n                <a href=\"/\">Home </a>\n                <a href=\"/posts\">New Post</a>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","const Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <p>&copy;2021 All Rights Reserved- Amrik, Marko, Yash</p>\n\n\n        </footer>\n    );\n}\n \nexport default Footer;","const Home = () => {\n    return (\n        <div className=\"HomepageContent\">\n            <div className=\"h2\">\n            <h2>Homepage</h2>\n            </div>\n            \n            <h3>This is a blogging website. You can only type with String, and you can talk about anything you want!(As long as it's appropriate).</h3>\n            <br></br>\n            <h3>First Create a Topic, and then share your experiences!!</h3>\n            <br></br>\n            <h3>*This website is specifically targetted towards high school and college students. </h3>\n        </div>\n    );\n}\n \nexport default Home;","import { useState, useEffect } from 'react';\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\"\nimport { collection, getDocs, addDoc } from \"firebase/firestore\"; \nimport { doc, getDoc } from \"firebase/firestore\";\n\n\nconst BlogList = () => {\n  \n    // const firebaseConfig = {\n    //     apiKey: \"AIzaSyC3_QW2LaKIl4wJ2abltFtjuUbN9Nxbe7E\",\n    //     authDomain: \"yamdata-9a05c.firebaseapp.com\",\n    //     projectId: \"yamdata-9a05c\",\n    //     storageBucket: \"yamdata-9a05c.appspot.com\",\n    //     messagingSenderId: \"878503987702\",\n    //     appId: \"1:878503987702:web:2e7e4c1251c266c4d4dfd7\"\n    //   };\n    \n    //   const app = initializeApp(firebaseConfig);\n      const db = getFirestore();\n      const [Posts, setPosts]=useState([]);\n      useEffect(()=>{getDocs(collection(db, \"posts\")).then(querySnapshot => {\n        let temp = [];\n        \n        querySnapshot.forEach(query => {temp.push((query.data()))})\n        setPosts(temp);\n        })})\n      \n    const createClick = () => {\n        var x = document.getElementById(\"testControl\");\n        if (x.style.display === \"none\") { \n            x.style.display = \"block\";\n        } else {\n            x.style.display = \"none\";\n        }\n        const docRef = doc(db, \"topics\", \"posts\");\n        getDoc(docRef).then(docSnap=>{\n          if (docSnap.exists()) {\n            console.log(\"Document data:\", docSnap.data());\n          } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n          }\n        })\n    }\n\n    const postBlog = () => {\n        var userPostInput = document.getElementById(\"textValue\").value;\n        console.log(userPostInput);\n        addDoc(collection(db, \"posts\"), {\n            content: userPostInput,\n            title: 'Marko is cool'\n            });\n    }\n\n    const replyClick = () => {\n        var y = document.getElementById(\"replyControl\");\n        if (y.style.display === \"none\") { \n            y.style.display = \"block\";\n        } else {\n            y.style.display = \"none\";\n        }\n    }\n\n    const postReply = () => { \n        var userReplyInput = document.getElementById(\"postValue\").value;\n        console.log(userReplyInput);\n        var userInput = document.getElementById(\"textValue\").value;\n        console.log(userInput);\n\n\n\n        // try {\n        //     const docRef = doc(db, \"topics\");\n        //     addDoc(docRef).then({\n        //         content: userInput,\n        //         title: \"my title!\"\n        //     })\n        // console.log(\"Document written with ID: \", docRef.id);\n        // } catch (e) {\n        // console.error(\"Error adding document: \", e);\n        // }\n    }\n\n    return (\n        <div className =\"createblog\">\n            <h2>Welcome, create a new blog!</h2> \n            <button onClick={createClick}>Create New Blog</button>\n            <div id =\"testControl\">\n                <textarea type=\"text\" id=\"textValue\"/>\n                <br></br>\n                <button onClick={postBlog} id=\"postButton\">Post Blog</button>\n                <div id=\"reply\">\n                    <button onClick={replyClick} id=\"replyButton\">Reply</button>\n                    <div id =\"replyControl\">\n                        <textarea type=\"text\" id=\"postValue\"/>\n                        <br></br>\n                        <button onClick={postReply} id=\"postreplyButton\">Post Reply</button>\n                        {Posts.map(post => <div >{JSON.stringify(post)}</div>)};\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n \nexport default BlogList;\n","import { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n    return (\n        <div className=\"NotFoundDiv\">\n            <h1>Error 404: Resource Not Found</h1>\n            <Link to=\"/\">Back to Home</Link>\n        </div>\n    );\n}\n \nexport default NotFound;","import './App.css';\nimport Navbar from './NavBar';\nimport Footer from './Footer';\nimport Home from './Home';\nimport BlogList from './BlogList'\nimport NotFound from './NotFound';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\"\nimport { collection, getDocs } from \"firebase/firestore\"; \nimport { doc, getDoc } from \"firebase/firestore\";\n\n// Import the functions you need from the SDKs you need\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut } from \"firebase/auth\";\n\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBv9viQ5RO5J1gSSqle3pWKi4ZmNo7dlfM\",\n  authDomain: \"cutiehacks-b04fe.firebaseapp.com\",\n  projectId: \"cutiehacks-b04fe\",\n  storageBucket: \"cutiehacks-b04fe.appspot.com\",\n  messagingSenderId: \"550438995683\",\n  appId: \"1:550438995683:web:65e846b53118164c2ba7d6\",\n  measurementId: \"G-HKFTP7W35F\"\n};\nconst app = initializeApp(firebaseConfig);\n\nconst auth = getAuth();\nsignOut(auth).then(() => {\n  // Sign-out successful.\n}).catch((error) => {\n  // An error happened.\n});\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// Initialize Firebase\nconst analytics = getAnalytics(app);\nconst provider = new GoogleAuthProvider();\n\nsignInWithPopup(auth, provider)\n  .then((result) => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    // The signed-in user info.\n    const user = result.user;\n    // ...\n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n\n\n\n\n\nfunction App() {\n\n\n\n  return (\n    <Router>\n    <div className=\"App\">\n    <Navbar />\n    <div className='content'>\n      <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <Route path=\"/posts\" component={BlogList}></Route>\n          <Route path=\"*\" />\n            <NotFound />\n        <Navbar />\n          <Route exact path=\"/\">\n            <div className=\"content\">\n              <p>{  }</p>\n            </div>\n          </Route>\n      </Switch>\n      </div>\n    </div>\n    <Footer />\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}